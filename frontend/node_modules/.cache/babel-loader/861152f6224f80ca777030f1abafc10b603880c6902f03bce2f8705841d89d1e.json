{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Book_Management/frontend/src/components/EditBookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBookForm = () => {\n  _s();\n  const {\n    book_id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [authorId, setAuthorId] = useState('');\n  const [genreId, setGenreId] = useState('');\n  const [price, setPrice] = useState('');\n  const [publicationDate, setPublicationDate] = useState('');\n  useEffect(() => {\n    if (book_id) {\n      fetchBookDetails();\n    }\n  }, [book_id]);\n  const fetchBookDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/books/${book_id}`);\n      const {\n        title,\n        author_id,\n        genre_id,\n        price,\n        publication_date\n      } = response.data;\n      setTitle(title);\n      setAuthorId(author_id);\n      setGenreId(genre_id);\n      setPrice(price);\n      setPublicationDate(new Date(publication_date).toISOString().slice(0, 10));\n    } catch (error) {\n      console.error('Error fetching book details:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const formattedPublicationDate = new Date(publicationDate).toISOString().slice(0, 10);\n      if (book_id) {\n        // Update existing book\n        await axios.put(`http://localhost:5000/books/${book_id}`, {\n          title,\n          author_id: authorId,\n          genre_id: genreId,\n          price,\n          publication_date: formattedPublicationDate\n        });\n      } else {\n        // Create new book (POST request)\n        await axios.post(`http://localhost:5000/books`, {\n          title,\n          author_id: authorId,\n          genre_id: genreId,\n          price,\n          publication_date: formattedPublicationDate\n        });\n      }\n\n      // Optionally, clear form fields or handle success state\n      clearForm();\n      alert('Book updated successfully!');\n\n      // Navigate to another page programmatically if needed\n      // window.location.href = '/books'; // Example using window.location\n    } catch (error) {\n      console.error('Error updating book:', error);\n    }\n  };\n  const clearForm = () => {\n    setTitle('');\n    setAuthorId('');\n    setGenreId('');\n    setPrice('');\n    setPublicationDate('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: authorId,\n        onChange: e => setAuthorId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: genreId,\n        onChange: e => setGenreId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Publication Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: publicationDate,\n        onChange: e => setPublicationDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(EditBookForm, \"Q0q8N4y9lvoYVctORC2RDHbByW4=\", false, function () {\n  return [useParams];\n});\n_c = EditBookForm;\nexport default EditBookForm;\nvar _c;\n$RefreshReg$(_c, \"EditBookForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","EditBookForm","_s","book_id","title","setTitle","authorId","setAuthorId","genreId","setGenreId","price","setPrice","publicationDate","setPublicationDate","fetchBookDetails","response","get","author_id","genre_id","publication_date","data","Date","toISOString","slice","error","console","handleSubmit","event","preventDefault","formattedPublicationDate","put","post","clearForm","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Book_Management/frontend/src/components/EditBookForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst EditBookForm = () => {\n  const { book_id } = useParams();\n  \n  const [title, setTitle] = useState('');\n  const [authorId, setAuthorId] = useState('');\n  const [genreId, setGenreId] = useState('');\n  const [price, setPrice] = useState('');\n  const [publicationDate, setPublicationDate] = useState('');\n\n  useEffect(() => {\n    if (book_id) {\n      fetchBookDetails();\n    }\n  }, [book_id]);\n\n  const fetchBookDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/books/${book_id}`);\n      const { title, author_id, genre_id, price, publication_date } = response.data;\n      setTitle(title);\n      setAuthorId(author_id);\n      setGenreId(genre_id);\n      setPrice(price);\n      setPublicationDate(new Date(publication_date).toISOString().slice(0, 10));\n    } catch (error) {\n      console.error('Error fetching book details:', error);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const formattedPublicationDate = new Date(publicationDate).toISOString().slice(0, 10);\n  \n      if (book_id) {\n        // Update existing book\n        await axios.put(`http://localhost:5000/books/${book_id}`, {\n          title,\n          author_id: authorId,\n          genre_id: genreId,\n          price,\n          publication_date: formattedPublicationDate\n        });\n      } else {\n        // Create new book (POST request)\n        await axios.post(`http://localhost:5000/books`, {\n          title,\n          author_id: authorId,\n          genre_id: genreId,\n          price,\n          publication_date: formattedPublicationDate\n        });\n      }\n      \n      // Optionally, clear form fields or handle success state\n      clearForm();\n      alert('Book updated successfully!');\n\n      // Navigate to another page programmatically if needed\n      // window.location.href = '/books'; // Example using window.location\n    } catch (error) {\n      console.error('Error updating book:', error);\n    }\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setAuthorId('');\n    setGenreId('');\n    setPrice('');\n    setPublicationDate('');\n  };\n\n  return (\n    <div>\n      <h2>Edit Book</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Title:</label>\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n\n        <label>Author ID:</label>\n        <input type=\"text\" value={authorId} onChange={(e) => setAuthorId(e.target.value)} required />\n\n        <label>Genre ID:</label>\n        <input type=\"text\" value={genreId} onChange={(e) => setGenreId(e.target.value)} required />\n\n        <label>Price:</label>\n        <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} required />\n\n        <label>Publication Date:</label>\n        <input type=\"text\" value={publicationDate} onChange={(e) => setPublicationDate(e.target.value)} required />\n\n        <button type=\"submit\">Update Book</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditBookForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}