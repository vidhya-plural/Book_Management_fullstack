{"ast":null,"code":"// src/service.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000'; // Replace with your backend URL\n\nconst service = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const getAllBooks = async () => {\n  const response = await service.get('/books');\n  return response.data;\n};\nexport const getBookById = async bookId => {\n  const response = await service.get(`/books/${bookId}`);\n  return response.data;\n};\nexport const addBook = async newBook => {\n  const response = await service.post('/books', newBook);\n  return response.data;\n};\nexport const updateBook = async (bookId, updatedBook) => {\n  const response = await service.put(`/books/${bookId}`, updatedBook);\n  return response.data;\n};\nexport const deleteBook = async bookId => {\n  const response = await service.delete(`/books/${bookId}`);\n  return response.data;\n};\n\n// Similar functions for authors and genres endpoints","map":{"version":3,"names":["axios","API_URL","service","create","baseURL","headers","getAllBooks","response","get","data","getBookById","bookId","addBook","newBook","post","updateBook","updatedBook","put","deleteBook","delete"],"sources":["/Users/vidhya-v/Desktop/bookstore-api/frontend/src/service.js"],"sourcesContent":["// src/service.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5000'; // Replace with your backend URL\n\nconst service = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const getAllBooks = async () => {\n  const response = await service.get('/books');\n  return response.data;\n};\n\nexport const getBookById = async (bookId) => {\n  const response = await service.get(`/books/${bookId}`);\n  return response.data;\n};\n\nexport const addBook = async (newBook) => {\n  const response = await service.post('/books', newBook);\n  return response.data;\n};\n\nexport const updateBook = async (bookId, updatedBook) => {\n  const response = await service.put(`/books/${bookId}`, updatedBook);\n  return response.data;\n};\n\nexport const deleteBook = async (bookId) => {\n  const response = await service.delete(`/books/${bookId}`);\n  return response.data;\n};\n\n// Similar functions for authors and genres endpoints\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAG,CAAC,QAAQ,CAAC;EAC5C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAG,CAAC,UAAUG,MAAM,EAAE,CAAC;EACtD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG,MAAOC,OAAO,IAAK;EACxC,MAAMN,QAAQ,GAAG,MAAML,OAAO,CAACY,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;EACtD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOJ,MAAM,EAAEK,WAAW,KAAK;EACvD,MAAMT,QAAQ,GAAG,MAAML,OAAO,CAACe,GAAG,CAAC,UAAUN,MAAM,EAAE,EAAEK,WAAW,CAAC;EACnE,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOP,MAAM,IAAK;EAC1C,MAAMJ,QAAQ,GAAG,MAAML,OAAO,CAACiB,MAAM,CAAC,UAAUR,MAAM,EAAE,CAAC;EACzD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}