{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Book_Management/frontend/src/components/AddGenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddGenrePage = () => {\n  _s();\n  const [genreName, setGenreName] = useState('');\n  const handleAddGenre = async () => {\n    try {\n      await axios.post('http://localhost:5000/genres', {\n        genre_name: genreName\n      });\n      // Optionally, navigate back to GenresPage or handle success message\n    } catch (error) {\n      console.error('Error adding genre:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: genreName,\n      onChange: e => setGenreName(e.target.value),\n      placeholder: \"Enter genre name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddGenre,\n      className: \"btn btn-primary\",\n      children: \"Add Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(AddGenrePage, \"XlwpUgqWWGa1D2wrJEtQwQ7LST4=\");\n_c = AddGenrePage;\nexport default AddGenrePage;\nvar _c;\n$RefreshReg$(_c, \"AddGenrePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddGenrePage","_s","genreName","setGenreName","handleAddGenre","post","genre_name","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","className","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Book_Management/frontend/src/components/AddGenrePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddGenrePage = () => {\n  const [genreName, setGenreName] = useState('');\n\n  const handleAddGenre = async () => {\n    try {\n      await axios.post('http://localhost:5000/genres', { genre_name: genreName });\n      // Optionally, navigate back to GenresPage or handle success message\n    } catch (error) {\n      console.error('Error adding genre:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Genre</h2>\n      <input\n        type=\"text\"\n        value={genreName}\n        onChange={(e) => setGenreName(e.target.value)}\n        placeholder=\"Enter genre name\"\n      />\n      <button onClick={handleAddGenre} className=\"btn btn-primary\">Add Genre</button>\n    </div>\n  );\n};\n\nexport default AddGenrePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMP,KAAK,CAACQ,IAAI,CAAC,8BAA8B,EAAE;QAAEC,UAAU,EAAEJ;MAAU,CAAC,CAAC;MAC3E;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,SAAU;MACjBc,QAAQ,EAAGC,CAAC,IAAKd,YAAY,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC;IAAkB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFd,OAAA;MAAQqB,OAAO,EAAEhB,cAAe;MAACiB,SAAS,EAAC,iBAAiB;MAAAZ,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxBID,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}